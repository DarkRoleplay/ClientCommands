apply plugin: 'java'
apply plugin: 'eclipse'
apply from: 'gradle/property_helper.gradle'
apply from: 'gradle/property_loader.gradle'

ext.modName = getRequiredString('mod_name')
ext.modAuthor = getRequiredString('mod_author')
ext.modId = getRequiredString('mod_id')
ext.modCredits = getDefaultString('mod_credits', ext.modAuthor)
ext.modDescription = getOptionalString('mod_description')
ext.modChangelog = getOptionalString('mod_changelog')
ext.modHomepage = getOptionalString('mod_homepage')
ext.modSource = getOptionalString('mod_source')
ext.modIssues = getOptionalString('mod_issues')

// Load Minecraft specific properties
ext.mcVersion = getRequiredString('minecraft_version')

// Load build-time modules
//apply from: 'gradle/build_number.gradle'
apply from: 'gradle/common_manifest.gradle'
apply from: 'gradle/common_artifacts.gradle'
apply from: 'gradle/forge.gradle'
apply from: 'gradle/minify_jsons.gradle'
//apply from: 'gradle/git_changelog.gradle'


// Load publishing modules
apply from: 'gradle/maven.gradle'
//apply from: 'gradle/signing.gradle'
apply from: 'gradle/curseforge.gradle'
//apply from: 'gradle/version_checker.gradle'

// IntelliJ Project Import
// The Mixin annotation process does not have an obfuscation source when running through the IntelliJ compiler,
// thus we have to prevent it from being activated as part of importing this Gradle project into IntelliJ.
if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}