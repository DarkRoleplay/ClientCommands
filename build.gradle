buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

group = 'net.dark_roleplay'
version = '1.18-1.0'

java {
    archivesBaseName = 'clientcommands'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: (String) property('parchment_version')

    accessTransformer = file(project.ext.mod_at)

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                clientcommands {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                clientcommands {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'clientcommands', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                clientcommands {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "clientcommands.refmap.json"

    config "clientcommands.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft "net.minecraftforge:forge:${property('minecraft_version')}-${property('forge_version')}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

var mod_name = property('mod_name')
var mod_author = property('mod_author')

jar {
    manifest {
        attributes([
                'Timestamp': System.currentTimeMillis(),
                'Specification-Title': mod_name,
                'Specification-Vendor': mod_author,
                'Specification-Version': project.version,
                'Implementation-Title': mod_name,
                'Implementation-Version': project.version,
                'Implementation-Vendor' : mod_author,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})"
        ])
    }
}

jar.finalizedBy('reobfJar')
